version: '3.9'
services:

  nginx:
    build:
      dockerfile: ./docker/nginx.Dockerfile
      context: .
    image: raelamorim/nginx
    container_name: nginx
    ports: 
      - "80:80"
    networks: 
      - prod
    depends_on:
      - "app1"
      - "app2" 
      - "app3"
      - "redis"
      - "mysql"

  app1:
    build:
      dockerfile: ./docker/gonews.Dockerfile
      context: .
    container_name: app1
    ports:
      - "8080"
    networks:
      - prod
    depends_on:
      db:
        condition: service_healthy
  
  app2:
    build:
      dockerfile: ./docker/gonews.Dockerfile
      context: .
    container_name: app2
    ports:
      - "8080"
    networks:
      - prod
    depends_on:
      - "app1"
      
  app3:
    build:
      dockerfile: ./docker/gonews.Dockerfile
      context: .
    container_name: app3
    ports:
      - "8080"
    networks:
      - prod
    depends_on:
      - "app1"
      - "app2"


  db:
    image: mysql
    container_name: gonews-db
    ports: 
      - 3306:3306
    environment:       
      - MYSQL_USER=gonewsuser
      - MYSQL_PASSWORD=gonewsps
      - MYSQL_DATABASE=gonews
      - MYSQL_ROOT_PASSWORD=gonewsps
    volumes:
      - ./.mysql:/var/lib/mysql
    networks:
      - prod
    healthcheck:
          test: mysqladmin ping -h 127.0.0.1 -u $MYSQL_USER --password=$MYSQL_PASSWORD
          interval: 2s
          timeout: 15s
          retries: 10
  
  redis:
    image: redis
    container_name: redis
    networks:
      - prod
    depends_on:
      - db      
    expose:      
      - "6379"

networks:
  prod:
    driver: bridge